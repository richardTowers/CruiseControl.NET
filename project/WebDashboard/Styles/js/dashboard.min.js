(function(){ 
'use strict';angular.module('dash', ['ui.bootstrap', 'ngCookies']);
})();
(function(){ 
'use strict';angular.module('dash').controller('main', ['$scope', function ($scope) {
    $scope.sidebarActive = true;
    $scope.toggleSidebar = function () {
        $scope.sidebarActive = !$scope.sidebarActive;
    };
}]);
})();
(function(){ 
'use strict';angular.module('dash').controller('projectGrid', ['$scope', function ($scope) {
    $scope.shouldShowRow = function (data) {
        return !$scope.projectGridSearch || data.toLowerCase().indexOf($scope.projectGridSearch.toLowerCase()) >= 0;
    };
}]);
})();
(function(){ 
'use strict';angular.module('dash').controller('projectGridExceptions', ['$scope', function ($scope) {
    var closedAlerts = [];

    $scope.closeAlert = function (index) {
        closedAlerts.push(index);
    };
    $scope.shouldShowAlert = function (index) {
        return closedAlerts.indexOf(index) < 0;
    };
}]);
})();
(function(){ 
'use strict';angular.module('dash').controller('projectGridForm', ['$scope', '$modal', '$http', function ($scope, $modal, $http) {

    var modalInstance;

    $scope.closeModal = function () {
        modalInstance && modalInstance.close();
    };

    $scope.checkParameters = function (buttonName, buttonValue, parametersUrl) {

        $scope.modalContents = '<i class="fa fa-spinner fa-spin fa-2x"></i>';
        $scope.modalHeader = 'Checking for parameters...';

        modalInstance = $modal.open({
            scope: $scope,
            template: '<div class="modal-header">' +
                '<h3 class="modal-title">{{modalHeader}}</h3>' +
                '</div><div class="modal-body" cc-bind-html="modalContents"></div>'
        });

        $http.get(parametersUrl).then(function (response) {
            if (response.data == 'NONE') {
                $scope.closeModal();
                $scope.ccSubmit({name: buttonName, value: buttonValue});
            }
            $scope.modalHeader = 'Parameters';
            $scope.modalContents = response.data;
        });
    };
}]);
})();
(function(){ 
'use strict';angular.module('dash').directive('ccBindHtml', ['$compile', function ($compile) {
	return {
		restrict: 'A',
		scope: { html: '=ccBindHtml' },
		link: function (scope, element, attrs) {
			scope.$watch('html', function () {
				element.html(scope.html);
				$compile(element.contents())(scope.$parent);
			});
		}
	};
}]);
})();
(function(){ 
'use strict';angular.module('dash').directive('ccSubmit', function () {
	return function (scope, element) {
		scope.ccSubmit = function (extraInput) {
			if (extraInput) {
				element.append('<input type="hidden" name="' + extraInput.name + '" value="' + extraInput.value + '">');
			}
			element[0].submit();
		};
	};
});
})();